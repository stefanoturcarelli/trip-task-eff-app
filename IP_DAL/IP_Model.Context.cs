//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IP_DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ItineraryPlannerEntities : DbContext
    {
        public ItineraryPlannerEntities()
            : base("name=ItineraryPlannerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Trip> Trips { get; set; }
        public virtual DbSet<TripTask> TripTasks { get; set; }
    
        public virtual int usp_DeleteTrip(Nullable<int> tripId)
        {
            var tripIdParameter = tripId.HasValue ?
                new ObjectParameter("TripId", tripId) :
                new ObjectParameter("TripId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteTrip", tripIdParameter);
        }
    
        public virtual ObjectResult<usp_GetAllTrips_Result> usp_GetAllTrips()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllTrips_Result>("usp_GetAllTrips");
        }
    
        public virtual ObjectResult<usp_GetTasks_Result> usp_GetTasks(Nullable<int> tripId)
        {
            var tripIdParameter = tripId.HasValue ?
                new ObjectParameter("TripId", tripId) :
                new ObjectParameter("TripId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTasks_Result>("usp_GetTasks", tripIdParameter);
        }
    
        public virtual int usp_InsertTrip(string destination, string description, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertTrip", destinationParameter, descriptionParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int usp_InsertTripTask(Nullable<int> tripTaskId, Nullable<int> tripId, string taskName, string taskDescription, Nullable<System.DateTime> taskDueDate)
        {
            var tripTaskIdParameter = tripTaskId.HasValue ?
                new ObjectParameter("TripTaskId", tripTaskId) :
                new ObjectParameter("TripTaskId", typeof(int));
    
            var tripIdParameter = tripId.HasValue ?
                new ObjectParameter("TripId", tripId) :
                new ObjectParameter("TripId", typeof(int));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var taskDescriptionParameter = taskDescription != null ?
                new ObjectParameter("TaskDescription", taskDescription) :
                new ObjectParameter("TaskDescription", typeof(string));
    
            var taskDueDateParameter = taskDueDate.HasValue ?
                new ObjectParameter("TaskDueDate", taskDueDate) :
                new ObjectParameter("TaskDueDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertTripTask", tripTaskIdParameter, tripIdParameter, taskNameParameter, taskDescriptionParameter, taskDueDateParameter);
        }
    
        public virtual int usp_UpdateTrip(Nullable<int> tripId, string destination, string description, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var tripIdParameter = tripId.HasValue ?
                new ObjectParameter("TripId", tripId) :
                new ObjectParameter("TripId", typeof(int));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateTrip", tripIdParameter, destinationParameter, descriptionParameter, startDateParameter, endDateParameter);
        }
    }
}
